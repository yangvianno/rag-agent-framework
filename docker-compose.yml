# docker-compose.yml

services:
  # --- Service #1: The Qdrant Database Service ---
  qdrant:
    platform: linux/amd64
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333" # REST API
      - "6334:6334" # gRPC
    # This 'volumes' section mounts a local directory into the container.
    # Use a named volume for persistent storage, managed by Docker.
    volumes:
      - ./qdrant_storage:/qdrant/storage
    container_name: qdrant_db
    networks:
      - agent_network
    # Ensures the api service only starts after Qdrant is fully operational, not just when the container has started
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/6333' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  
  # --- Service #2: The Python Application Service
  api:
    # Build and run using the amd64 platform for maximum compatibility on Apple Silicon.
    platform: linux/amd64
    build:  # Build the image from the Dockerfile in the current directory
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    # Pass environment variables from the local .env file into the container.
    env_file:
      - .env
    # This makes the 'api' service wait for the 'qdrant' service to start.
    depends_on:
      qdrant:
        condition: service_healthy
      ollama:
        condition: service_healthy
    container_name: rag_api_service
    networks:
      - agent_network
    # ADD THIS SECTION TO OVERRIDE THE URL from QDRANT_URL="http://localhost:6333" (.env -- for local Terminal running)
    environment:
      - QDRANT_URL=http://qdrant:6333
      - OLLAMA_URL=http://ollama:11434

  
  # --- Service #3: The Ollama LLM Service ---
  ollama:
    image: ollama/ollama
    init: true
    ports:
      - "11434:11434"
    volumes:
      - ollama_storage:/root/.ollama
    container_name: ollama_service
    networks:
      - agent_network
    healthcheck:
      test: ["CMD-SHELL", "bash -c ':> /dev/tcp/127.0.0.1/11434' || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # # The ollama/ollama Docker image does not start up correctly on some Apple Silicon machines without an explicit command
    # command: ["ollama", "serve"]


# --- Top-Level Definitions ---
# These must be at the root of the file (no indentation).

# Define the shared network for our services to communicate
networks:
  agent_network:
    driver: bridge

# Define the named volume for Qdrant's data to be stored persistently
volumes:
  qdrant_storage:
  ollama_storage: